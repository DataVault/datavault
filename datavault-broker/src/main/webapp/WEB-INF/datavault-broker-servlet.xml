<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:rabbit="http://www.springframework.org/schema/rabbit"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/rabbit
        http://www.springframework.org/schema/rabbit/spring-rabbit-1.4.xsd">

    <context:component-scan base-package="org.datavaultplatform.broker.controllers"/>

    <!-- Note:- You need to set DATAVAULT_HOME! -->
    <context:property-placeholder location="file:///${DATAVAULT_HOME}/config/datavault.properties"/>

    <mvc:annotation-driven />

    <!-- Configure to plugin JSON as request and response in method handler -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="jsonMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- Configure bean to convert JSON to POJO and vice versa -->
    <bean id="jsonMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
    </bean>

    <!--  static resources -->
    <mvc:resources mapping="/resources/**" location="/resources/" />

    <bean id="indexController" class="org.datavaultplatform.broker.controllers.IndexController">
    </bean>

    <bean id="filesController" class="org.datavaultplatform.broker.controllers.FilesController">
        <property name="filesService" ref="filesService" />
        <property name="usersService" ref="usersService" />
        <property name="tempDir" value="${tempDir}" />
    </bean>

    <bean id="vaultsController" class="org.datavaultplatform.broker.controllers.VaultsController">
        <property name="vaultsService" ref="vaultsService" />
        <property name="depositsService" ref="depositsService" />
        <property name="retrievesService" ref="retrievesService" />
        <property name="externalMetadataService" ref="externalMetadataService" />
        <property name="retentionPoliciesService" ref="retentionPoliciesService" />
        <property name="groupsService" ref="groupsService" />
        <property name="usersService" ref="usersService" />
        <property name="fileStoreService" ref="fileStoreService" />
        <property name="archiveStoreService" ref="archiveStoreService" />
        <property name="eventService" ref="eventService" />
        <property name="clientsService" ref="clientsService" />
        <property name="dataManagersService" ref="dataManagersService" />
        <property name="activeDir" value="${activeDir}" />
        <property name="archiveDir" value="${archiveDir}" />
    </bean>
    
    <bean id="depositsController" class="org.datavaultplatform.broker.controllers.DepositsController">
        <property name="vaultsService" ref="vaultsService" />
        <property name="depositsService" ref="depositsService" />
        <property name="archivesService" ref="archivesService" />
        <property name="retrievesService" ref="retrievesService" />
        <property name="metadataService" ref="metadataService" />
        <property name="externalMetadataService" ref="externalMetadataService" />
        <property name="filesService" ref="filesService" />
        <property name="usersService" ref="usersService" />
        <property name="archiveStoreService" ref="archiveStoreService" />
        <property name="jobsService" ref="jobsService" />
        <property name="sender" ref="sender" />
        <property name="optionsDir" value="${optionsDir:#{null}}" />
        <property name="tempDir" value="${tempDir:#{null}}" />
        <property name="localTempDir" value ="${localTempDir:#{null}" />
        <property name="bucketName" value="${s3.bucketName:#{null}}" />
        <property name="region" value="${s3.region:#{null}}" />
        <property name="awsAccessKey" value="${s3.awsAccessKey:#{null}}" />
        <property name="awsSecretKey" value="${s3.awsSecretKey:#{null}}" />
    </bean>

    <bean id="statisticsController" class="org.datavaultplatform.broker.controllers.StatisticsController">
        <property name="vaultsService" ref="vaultsService" />
        <property name="depositsService" ref="depositsService" />
        <property name="retrievesService" ref="retrievesService" />
        <property name="retentionPoliciesService" ref="retentionPoliciesService" />
        <property name="groupsService" ref="groupsService" />
        <property name="usersService" ref="usersService" />
        <property name="eventService" ref="eventService" />
    </bean>

    <bean id="adminController" class="org.datavaultplatform.broker.controllers.admin.AdminController">
        <property name="vaultsService" ref="vaultsService" />
        <property name="depositsService" ref="depositsService" />
        <property name="retrievesService" ref="retrievesService" />
        <property name="eventService" ref="eventService" />
    </bean>

    <bean id="retentionPoliciesController" class="org.datavaultplatform.broker.controllers.RetentionPoliciesController">
        <property name="retentionPoliciesService" ref="retentionPoliciesService" />
    </bean>

    <bean id="usersController" class="org.datavaultplatform.broker.controllers.UsersController">
        <property name="usersService" ref="usersService" />
        <property name="fileStoreService" ref="fileStoreService" />
        <property name="userKeyPairService" ref="userKeyPairService" />
        <property name="activeDir" value="${activeDir}" />
    </bean>

    <bean id="groupsController" class="org.datavaultplatform.broker.controllers.GroupsController">
        <property name="groupsService" ref="groupsService" />
        <property name="usersService" ref="usersService" />
    </bean>

    <bean id="fileStoreController" class="org.datavaultplatform.broker.controllers.FileStoreController">
        <property name="usersService" ref="usersService" />
        <property name="fileStoreService" ref="fileStoreService" />
        <property name="userKeyPairService" ref="userKeyPairService" />
        <property name="host" value="${sftp.host}"/>
        <property name="port" value="${sftp.port}"/>
        <property name="rootPath" value="${sftp.rootPath}"/>
        <property name="passphrase" value="${sftp.passphrase}"/>
    </bean>
    
    <bean id="metadataController" class="org.datavaultplatform.broker.controllers.MetadataController">
        <property name="externalMetadataService" ref="externalMetadataService" />
    </bean>
    
    <bean id="notifyController" class="org.datavaultplatform.broker.controllers.NotifyController">
        <property name="eventService" ref="eventService" />
        <property name="clientsService" ref="clientsService" />
        <property name="usersService" ref="usersService" />
    </bean>

    <bean id="adminUsersController" class="org.datavaultplatform.broker.controllers.admin.AdminUsersController">
        <property name="usersService" ref="usersService" />
    </bean>

    <bean id="adminArchiveStoreController" class="org.datavaultplatform.broker.controllers.admin.AdminArchiveStoreController">
        <property name="archiveStoreService" ref="archiveStoreService" />
    </bean>

    <bean id="initialiseDatabase" class="org.datavaultplatform.broker.scheduled.InitialiseDatabase">
        <property name="archiveStoreService" ref="archiveStoreService" />
        <property name="archiveDir" value="${archiveDir}" />
    </bean>

    <bean id="initialiseEncryption" class="org.datavaultplatform.broker.scheduled.InitialiseEncryption">
    </bean>

    <!-- Documentation using jsondoc -->

    <bean id="documentationController" class="org.jsondoc.springmvc.controller.JSONDocController">
        <constructor-arg name="version" value="1.0" />
        <constructor-arg name="basePath" value="${broker.url}" />
        <constructor-arg name="packages">
            <list>
                <value>org.datavaultplatform.broker.controllers</value>
                <value>org.datavaultplatform.common.model</value>
                <value>org.datavaultplatform.common.request</value>
                <value>org.datavaultplatform.common.response</value>
            </list>
        </constructor-arg>
        <property name="playgroundEnabled" value="true" />
        <property name="displayMethodAs" value="URI" />
    </bean>
    
</beans>