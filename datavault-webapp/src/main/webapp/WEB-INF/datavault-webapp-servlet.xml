<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <context:component-scan base-package="org.datavaultplatform.webapp.controllers"/>

    <context:property-placeholder location="file:///${user.home}/datavault-webapp.properties" ignore-resource-not-found="true" ignore-unresolvable="true"/>
    <context:property-placeholder location="WEB-INF/datavault-webapp.properties"/>

    <mvc:annotation-driven />

    <!--
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/pages/"/>
        <property name="suffix" value=".jsp"/>
    </bean>
    -->

    <!-- freemarker config -->

    <bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/freemarker/"/>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape"/>
            </map>
        </property>
        <property name="freemarkerSettings">
            <props>
                <prop key="url_escaping_charset">UTF-8</prop>
            </props>
        </property>
    </bean>

    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>

    <!--
    View resolvers can also be configured with ResourceBundles or XML files. If you need
    different view resolving based on Locale, you have to use the resource bundle resolver.
    -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="cache" value="true"/>
        <property name="prefix" value=""/>
        <property name="suffix" value=".ftl"/>
    </bean>

    <!--  static resources -->
    <mvc:resources mapping="/resources/**" location="/resources/" />



    <bean id="filesController" class="org.datavaultplatform.webapp.controllers.FilesController">
        <property name="restService" ref="restService" />
    </bean>

    <bean id="depositsController" class="org.datavaultplatform.webapp.controllers.DepositsController">
        <property name="restService" ref="restService" />
    </bean>

    <bean id="vaultsController" class="org.datavaultplatform.webapp.controllers.VaultsController">
        <property name="restService" ref="restService" />
    </bean>

    <bean id="usersController" class="org.datavaultplatform.webapp.controllers.UsersController">
        <property name="restService" ref="restService" />
    </bean>

    <bean id="feedbackController" class="org.datavaultplatform.webapp.controllers.FeedbackController">
        <property name="mailSender" ref="mailSender"/>
        <property name="templateMessage" ref="templateMessage"/>
    </bean>

    <bean id="adminController" class="org.datavaultplatform.webapp.controllers.admin.AdminController">
        <property name="restService" ref="restService" />
    </bean>

    <bean id="adminUsersController" class="org.datavaultplatform.webapp.controllers.admin.AdminUsersController">
        <property name="restService" ref="restService" />
    </bean>

    <bean id="adminGroupsController" class="org.datavaultplatform.webapp.controllers.admin.AdminGroupsController">
        <property name="restService" ref="restService" />
    </bean>

    <bean id="adminVaultsController" class="org.datavaultplatform.webapp.controllers.admin.AdminVaultsController">
        <property name="restService" ref="restService" />
    </bean>

    <bean id="adminDepositsController" class="org.datavaultplatform.webapp.controllers.admin.AdminDepositsController">
        <property name="restService" ref="restService" />
    </bean>

    <bean id="adminRestoresController" class="org.datavaultplatform.webapp.controllers.admin.AdminRestoresController">
        <property name="restService" ref="restService" />
    </bean>

    <bean id="groupVaultsController" class="org.datavaultplatform.webapp.controllers.groups.GroupVaultsController">
        <property name="restService" ref="restService" />
    </bean>

    <!-- todo : should the service beans be put into their own config file? -->

    <bean id="restService" class="org.datavaultplatform.webapp.services.RestService">
        <property name="brokerURL" value="${brokerURL}" />
    </bean>

    <!-- Email feedback settings -->
    <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host"><value>${mail.host}</value></property>
        <property name="port"><value>${mail.port}</value></property>
        <property name="protocol"><value>smtp</value></property>
        <property name="username"><value>${mail.username}</value></property>
        <property name="password"><value>${mail.password}</value></property>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.starttls.enable">true</prop>
                <prop key="mail.smtp.quitwait">false</prop>
            </props>
        </property>
    </bean>

    <bean id="templateMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="to" value="${mail.administrator}"/>
        <property name="from" value="feedback@datavaultplatform.org"/>
        <property name="subject" value="DataVault feedback"/>
    </bean>

</beans>