# Fake comment :)

language: java
jdk:
  - oraclejdk8

sudo: required

env:
  # Give Maven 2GB of memory to work with
  - MAVEN_OPTS=-Xmx2048M
  
services:
  - docker
  
before_install:
  # - setup_docker.sh
  - mvn install:install-file -Dfile=datavault-common/src/main/resources/ftm-api-2.4.2.jar -DgroupId=oracle.cloudstorage.ftm -DartifactId=ftm-api -Dversion=1.0 -Dpackaging=jar
  - mvn install:install-file -Dfile=datavault-common/src/main/resources/low-level-api-core-1.14.19.jar -DgroupId=oracle.cloudstorage.ftm -DartifactId=low-level-api-core -Dversion=1.0 -Dpackaging=jar
  - docker-compose rm -f
  - docker-compose pull

script: 
  # docker needs jar file to start
  - mvn clean test package
  - service docker status
  - docker-compose build
  - docker-compose up -d rabbitmq mysql vault vault-administration
  - sleep 60 # wait that containers are ready
  - docker-compose logs rabbitmq
  - docker-compose exec rabbitmq rabbitmqctl authenticate_user datavault datavault
  - docker-compose up -d workers
  - sleep 60 # wait that container is ready
  - docker-compose logs workers
  - docker-compose ps
  - mvn verify -P integration-test
  - sed -i 's/chunking\.enabled = true/chunking.enabled = false/' docker/config/datavault.properties
  - docker-compose restart workers
  - mvn verify -P integration-test
  - sed -i 's/encryption\.enabled = true/encryption.enabled = false/' docker/config/datavault.properties
  - docker-compose restart workers
  - mvn verify -P integration-test
  - sed -i 's/chunking\.enabled = false/chunking.enabled = true/' docker/config/datavault.properties
  - docker-compose restart workers
  - mvn verify -P integration-test
  
after_script:
  - docker-compose stop -t 1
