# This is the DataVault configuration file. Settings are used to customise different options.
#
# This file is used to set properties in the various Spring files located in each application.

# Broker settings
# ===============
# The URL of the broker API for use by the default web application
broker.url = http://localhost:8080/datavault-broker
# API key for the default web client
broker.api.key = datavault-webapp
# Debug setting to disable API authentication
broker.validateclient = true

# Database settings
# =================
# The location of the MySQL database
db.url = mysql:3306/datavault?useUnicode=true
#The MySQL username
db.username = datavault
# The MySQL password
db.password = datavault

# Message queue settings
# ======================
# The location of the RabbitMQ server
queue.server = rabbitmq
# The RabbitMQ username
queue.user = datavault
# The RabbitMQ password
queue.password = datavault
# The name of the primary RabbitMQ queue for communication between the broker and workers
queue.name = datavault
# The name of the RabbitMQ queue to use for notifying the broker of events
queue.events = datavault-event

# Worker settings
# ===============
# The number of concurrent workers to start
worker.number = 1

# Top level storage location settings
# ===================================
# A default directory for sample user data (if per-user storage is not configured)
activeDir = /Users
# Directory for archive data (if using 'local storage')
archiveDir = /tmp/datavault/archive
# A temporary directory for workers to process files before storing in the archive
tempDir = /tmp/datavault/temp
# A directory for storing archive metadata
metaDir = /tmp/datavault/meta

# Email server settings
# =====================
# The email account of the system administrator
mail.administrator = feedback@datavaultplatform.org
# SMTP host for sending mail
mail.host = smtp.gmail.com
# SMTP port for sending mail
mail.port = 587
# SMTP account name for sending mail
mail.username = XXX@gmail.com
# SMTP password for sending mail
mail.password = XXX

# Welcome settings
# ================
# Welcome message (HTML) displayed by the (non-shibboleth) login page.
webapp.welcome =

# CRIS system settings
# ====================
# The URL of the external metadata service (for example, a Pure CRIS API). Leave this blank to use a mock provider
# eg. https://example.org/ws/rest/datasets
# If using HTTP BASIC authentication, use: https://username:password@example.org/ws/rest/datasets
metadata.url =
# Name displayed in the help page for the institutional CRIS or external metadata system
metadata.system = CRIS
# URL displayed in the help page for the institutional CRIS or external metadata system
metadata.link = http://cris.example.com/

# Retention policy checker settings
# =================================
# How frequently the retention policy check job is run (in 'cron' format)
# Example: Check the retention policies each weekday at 9am
retentioncheck.schedule = 0 0 9 * * MON-FRI

# SFTP server settings
# ====================
# Default SFTP host
sftp.host = localhost
# Default SFTP port
sftp.port = 22
# Default SFTP path
sftp.rootPath = /
# Default SFTP key passphrase
sftp.passphrase = datavault

# Shibboleth authentication settings
# ==================================
# Shibboleth header containing the username
shibboleth.principal= uid
# Shibboleth header containing the user's first name
shibboleth.firstname = givenName
# Shibboleth header containing the user's last name
shibboleth.lastname = sn
# Shibboleth header containing the user's email
shibboleth.email = mail

# LDAP settings
# =============
# Set this to false if you don't need to retrieve attributes from LDAP
ldap.enabled = true
ldap.host = hostname
ldap.port = 636
ldap.useSsl = true
# In this example the uun is an account with privileged access to LDAP
ldap.dn = uid=uun,ou=people,o=myu.ed
ldap.password = secret
ldap.searchContext = ou=people,o=myu.ed
ldap.searchFilter = uid
# A list of the attributes you want to retrieve from LDAP
ldap.attrs = attr1,attr2,etc